{
  "name": "my-angular-phone-catalog",
  "private": true,
  "version": "0.0.0",
  "description": "My realization of Angular phone catalog",
  "repository": "https://github.com/Meprobez/my-angular-phone-catalog",
  "license": "MIT",
  "devDependencies": {
    "bower": "^1.8.0",
    "http-server": "^0.9.0",
    "jasmine-core": "^2.4.1",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^0.2.3",
    "karma-firefox-launcher": "^0.1.7",
    "karma-jasmine": "^0.3.8",
	"karma-junit-reporter": "^0.4.1",
    "protractor": "^4.0.9",
	"browserify":"14.1.0",
	"exorcist":"0.4.0",
	"watchify":"3.9.0",
	"catw":"1.0.1",
	"postcss":"5.2.16",
	"postcss-cli":"3.0.0",
	"uglify-js":"2.8.16"
  },
  "scripts": {
    "postinstall": "bower install",
	
    "update-deps": "npm update",
    "postupdate-deps": "bower update",

    "prestart": "npm install",
    "start": "http-server ./app  -a localhost -p 8000 -c7200 ",

    "pretest": "npm install",
    "test": "karma start karma.conf.js",
    "test-single-run": "karma start karma.conf.js --single-run",

    "preupdate-webdriver": "npm install",
    "update-webdriver": "webdriver-manager update",

    "preprotractor": "npm run update-webdriver",
    "protractor": "protractor e2e-tests/protractor.conf.js",
	
	"watch-css": "catw  './app/*/*.css' -o ./app/css/bundle.css -v",
    "watch-js": "watchify ./app/bower-components/*/*.js -o ./app/static/bundle.js -dv",
    "watch": "npm run watch-css & npm run watch-js",
    "build-css": "catw  './app/*/*.css'> ./app/css/bundle.css",
    "build-js": "browserify ./app/bower-components/*/*.js > ./app/static/bundle.js",
    "build": "npm run build-css && npm run build-js",
	"autoprefixer": "postcss -u autoprefixer -r ./app/css/*",

    "update-index-async": "node -e \"var fs=require('fs'),indexFile='app/index-async.html',loaderFile='app/bower_components/angular-loader/angular-loader.min.js',loaderText=fs.readFileSync(loaderFile,'utf-8').split(/sourceMappingURL=angular-loader.min.js.map/).join('sourceMappingURL=bower_components/angular-loader/angular-loader.min.js.map'),indexText=fs.readFileSync(indexFile,'utf-8').split(/\\/\\/@@NG_LOADER_START@@[\\s\\S]*\\/\\/@@NG_LOADER_END@@/).join('//@@NG_LOADER_START@@\\n'+loaderText+'    //@@NG_LOADER_END@@');fs.writeFileSync(indexFile,indexText);\""
  }
}
